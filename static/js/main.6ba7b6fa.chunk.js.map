{"version":3,"sources":["components/Dashboard.js","components/Canvas.js","layout/Addition.js","layout/Subtract.js","layout/Multiply.js","layout/Division.js","layout/Random.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","state","addScore","subScore","multScore","divScore","randScore","onClick","e","preventDefault","localStorage","clear","_this","setState","getItem","this","JSON","parse","react_default","a","createElement","className","colSpan","scope","Component","Canvas","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isPainting","userStrokeStyle","guestStrokeStyle","line","userId","v4","prevPos","offsetX","offsetY","onMouseDown","bind","assertThisInitialized","onMouseMove","endPaintEvent","nativeEvent","_ref","_ref2","offSetData","positionData","start","objectSpread","stop","concat","paint","sendPaintData","currPos","strokeStyle","x","y","ctx","beginPath","moveTo","lineTo","stroke","canvas","width","height","getContext","lineJoin","lineCap","lineWidth","_this2","ref","style","background","onMouseLeave","onMouseUp","Addition","num1","num2","result","backresult","turnedOn","isCanvas","onCanvasErase","onChange","defineProperty","target","name","value","_this$state","numberResult","parseFloat","randomNum","Math","floor","random","onSubmit","_this$state2","alert","increment","setItem","window","confirm","disabled","type","required","placeholder","pattern","step","components_Canvas","Subtract","Multiply","Division","remainder","backremainder","numberRemainder","plus","minus","mult","div","question","Random","randOperator","isOperator","placeHolder","Navbar","Link","to","data-toggle","App","HashRouter","src_components_Navbar","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mSAGqBA,oNACnBC,MAAQ,CACNC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,MAwDbC,QAAU,SAAAC,GACRA,EAAEC,iBAEFC,aAAaC,QACbC,EAAKC,SAAS,CACZX,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,SAAU,IACVC,UAAW,0FA5D4B,OAArCI,aAAaI,QAAQ,YACvBC,KAAKF,SAAS,CACZX,SAAU,MAGZa,KAAKF,SAAS,CACZX,SAAUc,KAAKC,MAAMP,aAAaI,QAAQ,eAIL,OAArCJ,aAAaI,QAAQ,YACvBC,KAAKF,SAAS,CACZV,SAAU,MAGZY,KAAKF,SAAS,CACZV,SAAUa,KAAKC,MAAMP,aAAaI,QAAQ,eAIJ,OAAtCJ,aAAaI,QAAQ,aACvBC,KAAKF,SAAS,CACZT,UAAW,MAGbW,KAAKF,SAAS,CACZT,UAAWY,KAAKC,MAAMP,aAAaI,QAAQ,gBAGN,OAArCJ,aAAaI,QAAQ,YACvBC,KAAKF,SAAS,CACZR,SAAU,MAGZU,KAAKF,SAAS,CACZR,SAAUW,KAAKC,MAAMP,aAAaI,QAAQ,eAIJ,OAAtCJ,aAAaI,QAAQ,aACvBC,KAAKF,SAAS,CACZP,UAAW,MAGbS,KAAKF,SAAS,CACZP,UAAWU,KAAKC,MAAMP,aAAaI,QAAQ,iDAoB/C,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,+FAIAF,EAAAC,EAAAC,cAAA,oGAIAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAA4BC,QAAQ,KAAlD,YAKJJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIG,MAAM,MAAMF,UAAU,+BAA1B,YAGAH,EAAAC,EAAAC,cAAA,MAAIG,MAAM,MAAMF,UAAU,+BAA1B,eAGAH,EAAAC,EAAAC,cAAA,MAAIG,MAAM,MAAMF,UAAU,+BAA1B,kBAGAH,EAAAC,EAAAC,cAAA,MAAIG,MAAM,MAAMF,UAAU,+BAA1B,YAGAH,EAAAC,EAAAC,cAAA,MAAIG,MAAM,MAAMF,UAAU,+BAA1B,WAIFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,KAAKd,MAAMC,UACnDgB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,KAAKd,MAAME,UACnDe,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,KAAKd,MAAMG,WACnDc,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,KAAKd,MAAMI,UACnDa,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,KAAKd,MAAMK,cAIzDY,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBd,QAASQ,KAAKR,SAAlD,6BAzH+BiB,uECmGxBC,cAlGb,SAAAA,EAAYC,GAAO,IAAAd,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,IACjBb,EAAAe,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhB,KAAMW,KAMRM,YAAa,EAPMpB,EASnBqB,gBAAkB,UATCrB,EAUnBsB,iBAAmB,UAVAtB,EAWnBuB,KAAO,GAXYvB,EAanBwB,OAASC,eAbUzB,EAcnB0B,QAAU,CAAEC,QAAS,EAAGC,QAAS,GAZ/B5B,EAAK6B,YAAc7B,EAAK6B,YAAYC,KAAjBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAf,KACnBA,EAAKgC,YAAchC,EAAKgC,YAAYF,KAAjBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAf,KACnBA,EAAKiC,cAAgBjC,EAAKiC,cAAcH,KAAnBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAf,KAJJA,8EAgBU,IAAfkC,EAAeC,EAAfD,YACJP,EAAqBO,EAArBP,QAASC,EAAYM,EAAZN,QACjBzB,KAAKiB,YAAa,EAClBjB,KAAKuB,QAAU,CAAEC,UAASC,kDAGC,IAAfM,EAAeE,EAAfF,YACZ,GAAI/B,KAAKiB,WAAY,KAEbiB,EAAa,CAAEV,QADQO,EAArBP,QACsBC,QADDM,EAAZN,SAGXU,EAAe,CACnBC,MAAMxB,OAAAyB,EAAA,EAAAzB,CAAA,GAAMZ,KAAKuB,SACjBe,KAAK1B,OAAAyB,EAAA,EAAAzB,CAAA,GAAMsB,IAGblC,KAAKoB,KAAOpB,KAAKoB,KAAKmB,OAAOJ,GAC7BnC,KAAKwC,MAAMxC,KAAKuB,QAASW,EAAYlC,KAAKkB,0DAIxClB,KAAKiB,aACPjB,KAAKiB,YAAa,EAClBjB,KAAKyC,+CAGHlB,EAASmB,EAASC,GAAa,IAC3BnB,EAAqBkB,EAArBlB,QAASC,EAAYiB,EAAZjB,QACAmB,EAAkBrB,EAA3BC,QAAqBqB,EAAMtB,EAAfE,QAEpBzB,KAAK8C,IAAIC,YACT/C,KAAK8C,IAAIH,YAAcA,EAEvB3C,KAAK8C,IAAIE,OAAOJ,EAAGC,GAEnB7C,KAAK8C,IAAIG,OAAOzB,EAASC,GAEzBzB,KAAK8C,IAAII,SACTlD,KAAKuB,QAAU,CAAEC,UAASC,kSAsB1BzB,KAAKmD,OAAOC,MAAQ,IACpBpD,KAAKmD,OAAOE,OAAS,IACrBrD,KAAK8C,IAAM9C,KAAKmD,OAAOG,WAAW,MAClCtD,KAAK8C,IAAIS,SAAW,QACpBvD,KAAK8C,IAAIU,QAAU,QACnBxD,KAAK8C,IAAIW,UAAY,mCAGd,IAAAC,EAAA1D,KACP,OACEG,EAAAC,EAAAC,cAAA,UAEEsD,IAAK,SAAAA,GAAG,OAAKD,EAAKP,OAASQ,GAC3BC,MAAO,CAAEC,WAAY,SACrBnC,YAAa1B,KAAK0B,YAClBoC,aAAc9D,KAAK8B,cACnBiC,UAAW/D,KAAK8B,cAChBD,YAAa7B,KAAK6B,qBA9FLpB,aCAAuD,6MACnB9E,MAAQ,CACN+E,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZC,UAAU,EACVlF,SAAU,EACVmF,UAAU,KASZC,cAAgB,SAAA9E,GACdA,EAAEC,iBACFG,EAAKC,SACH,CACEwE,UAAU,GAEZ,kBACEzE,EAAKC,SAAS,CACZwE,UAAU,SAKlBE,SAAW,SAAA/E,GACTI,EAAKC,SAALc,OAAA6D,EAAA,EAAA7D,CAAA,GAAiBnB,EAAEiF,OAAOC,KAAOlF,EAAEiF,OAAOE,QAD5B,IAAAC,EAGShF,EAAKX,MAApB+E,EAHMY,EAGNZ,KAAMC,EAHAW,EAGAX,KACVY,EAAeC,WAAWd,GAAQc,WAAWb,GACjDrE,EAAKC,SAAS,CACZsE,WAAYU,OAIhBE,UAAY,SAAAvF,GACVA,EAAEC,iBAEFG,EAAKC,SAAS,CACZmE,KAAMgB,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBjB,KAAMe,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBd,UAAU,OAIde,SAAW,SAAA3F,GACTA,EAAEC,iBADY,IAAA2F,EAG6BxF,EAAKX,MAAxC+E,EAHMoB,EAGNpB,KAAMC,EAHAmB,EAGAnB,KAAMC,EAHNkB,EAGMlB,OAAQC,EAHdiB,EAGcjB,WAExBU,EAAeC,WAAWd,GAAQc,WAAWb,GAMjD,GAJArE,EAAKC,SAAS,CACZsE,WAAYU,IAGVC,WAAWZ,KAAYC,EAAY,CACrCkB,MAAM,YACN,IAAIC,EAAY1F,EAAKX,MAAMC,SAAW,EACtCU,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZjF,SAAUoG,IAGZ5F,aAAa6F,QAAQ,WAAYD,QAG/BE,OAAOC,QACL,4FAGFH,EAAY1F,EAAKX,MAAMC,SAAW,EAClCU,EAAKC,SAAS,CAAEuE,UAAU,EAAMlF,SAAUoG,IAC1C5F,aAAa6F,QAAQ,WAAYD,KAEjCA,EAAY1F,EAAKX,MAAMC,SAAW,EAClCU,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZjF,SAAUoG,IAGZ5F,aAAa6F,QAAQ,WAAYD,wFAlFrCvF,KAAKF,SAAS,CACZX,SAAUc,KAAKC,MAAMP,aAAaI,QAAQ,gDAuF5C,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,8BACoBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YADpB,qMAMAH,EAAAC,EAAAC,cAAA,UACEC,UAAU,uBACVqF,SAAU3F,KAAKd,MAAMmF,SACrB7E,QAASQ,KAAKgF,WAHhB,2BAOA7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWL,KAAKd,MAAMC,WAExBgB,EAAAC,EAAAC,cAAA,QAAM+E,SAAUpF,KAAKoF,UACnBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,6BACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAM+E,KAClBO,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAA+B,IAC5CH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMgF,KAClBM,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,SACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMiF,OAClBK,SAAUxE,KAAKwE,SACfsB,YAAY,SACZE,KAAK,SAIT7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLhB,MAAM,oBACNtE,UAAU,yCAGdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACVd,QAASQ,KAAKuE,eAFhB,wBAODvE,KAAKd,MAAMoF,SAAWnE,EAAAC,EAAAC,cAAC4F,EAAD,MAAa,cA3KRxF,aCAjByF,6MACnBhH,MAAQ,CACN+E,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZC,UAAU,EACVjF,SAAU,EACVkF,UAAU,KASZC,cAAgB,SAAA9E,GACdA,EAAEC,iBACFG,EAAKC,SACH,CACEwE,UAAU,GAEZ,kBACEzE,EAAKC,SAAS,CACZwE,UAAU,SAKlBE,SAAW,SAAA/E,GACTI,EAAKC,SAALc,OAAA6D,EAAA,EAAA7D,CAAA,GAAiBnB,EAAEiF,OAAOC,KAAOlF,EAAEiF,OAAOE,QAD5B,IAAAC,EAGShF,EAAKX,MAApB+E,EAHMY,EAGNZ,KAAMC,EAHAW,EAGAX,KACVY,EAAeC,WAAWd,GAAQc,WAAWb,GACjDrE,EAAKC,SAAS,CACZsE,WAAYU,OAIhBE,UAAY,SAAAvF,GACVA,EAAEC,iBAEFG,EAAKC,SAAS,CACZmE,KAAMgB,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBjB,KAAMe,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBd,UAAU,OAIde,SAAW,SAAA3F,GACTA,EAAEC,iBADY,IAAA2F,EAG6BxF,EAAKX,MAAxC+E,EAHMoB,EAGNpB,KAAMC,EAHAmB,EAGAnB,KAAMC,EAHNkB,EAGMlB,OAAQC,EAHdiB,EAGcjB,WAExBU,EAAeC,WAAWd,GAAQc,WAAWb,GAMjD,GAJArE,EAAKC,SAAS,CACZsE,WAAYU,IAGVC,WAAWZ,KAAYC,EAAY,CACrCkB,MAAM,YACN,IAAIC,EAAY1F,EAAKX,MAAME,SAAW,EACtCS,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,IAGdzE,aAAa6F,QAAQ,WAAYD,QAG/BE,OAAOC,QACL,4FAGFH,EAAY1F,EAAKX,MAAME,SAAW,EAClCS,EAAKC,SAAS,CAAEuE,UAAU,IAC1B1E,aAAa6F,QAAQ,WAAYD,KAEjC1F,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,IAEdmB,EAAY1F,EAAKX,MAAME,SAAW,EAElCO,aAAa6F,QAAQ,WAAYD,IAGrC1F,EAAKC,SAAS,CACZV,SAAUa,KAAKC,MAAMP,aAAaI,QAAQ,mGApF5CC,KAAKF,SAAS,CACZV,SAAUa,KAAKC,MAAMP,aAAaI,QAAQ,gDAwF5C,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,8BACoBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YADpB,qMAMAH,EAAAC,EAAAC,cAAA,UACEC,UAAU,uBACVqF,SAAU3F,KAAKd,MAAMmF,SACrB7E,QAASQ,KAAKgF,WAHhB,2BAOA7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWL,KAAKd,MAAME,WAExBe,EAAAC,EAAAC,cAAA,QAAM+E,SAAUpF,KAAKoF,UACnBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,6BACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAM+E,KAClBO,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAAgC,IAC7CH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMgF,KAClBM,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,SACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMiF,OAClBK,SAAUxE,KAAKwE,SACfsB,YAAY,SACZE,KAAK,SAIT7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLhB,MAAM,oBACNtE,UAAU,yCAGdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACVd,QAASQ,KAAKuE,eAFhB,wBAODvE,KAAKd,MAAMoF,SAAWnE,EAAAC,EAAAC,cAAC4F,EAAD,MAAa,cA5KRxF,aCAjB0F,6MACnBjH,MAAQ,CACN+E,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZC,UAAU,EACVhF,UAAW,EACXiF,UAAU,KASZC,cAAgB,SAAA9E,GACdA,EAAEC,iBACFG,EAAKC,SACH,CACEwE,UAAU,GAEZ,kBACEzE,EAAKC,SAAS,CACZwE,UAAU,SAKlBE,SAAW,SAAA/E,GACTI,EAAKC,SAALc,OAAA6D,EAAA,EAAA7D,CAAA,GAAiBnB,EAAEiF,OAAOC,KAAOlF,EAAEiF,OAAOE,QAD5B,IAAAC,EAGShF,EAAKX,MAApB+E,EAHMY,EAGNZ,KAAMC,EAHAW,EAGAX,KACVY,EAAeC,WAAWd,GAAQc,WAAWb,GACjDrE,EAAKC,SAAS,CACZsE,WAAYU,OAIhBE,UAAY,SAAAvF,GACVA,EAAEC,iBAEFG,EAAKC,SAAS,CACZmE,KAAMgB,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBjB,KAAMe,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBd,UAAU,OAIde,SAAW,SAAA3F,GACTA,EAAEC,iBADY,IAAA2F,EAG6BxF,EAAKX,MAAxC+E,EAHMoB,EAGNpB,KAAMC,EAHAmB,EAGAnB,KAAMC,EAHNkB,EAGMlB,OAAQC,EAHdiB,EAGcjB,WAExBU,EAAeC,WAAWd,GAAQc,WAAWb,GAMjD,GAJArE,EAAKC,SAAS,CACZsE,WAAYU,IAGVC,WAAWZ,KAAYC,EAAY,CACrCkB,MAAM,YACN,IAAIC,EAAY1F,EAAKX,MAAMG,UAAY,EACvCQ,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,IAGdzE,aAAa6F,QAAQ,YAAaD,QAGhCE,OAAOC,QACL,4FAGFH,EAAY1F,EAAKX,MAAMG,UAAY,EACnCQ,EAAKC,SAAS,CAAEuE,UAAU,IAC1B1E,aAAa6F,QAAQ,YAAaD,KAElC1F,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,IAEdmB,EAAY1F,EAAKX,MAAMG,UAAY,EAEnCM,aAAa6F,QAAQ,YAAaD,IAGtC1F,EAAKC,SAAS,CACZT,UAAWY,KAAKC,MAAMP,aAAaI,QAAQ,oGApF7CC,KAAKF,SAAS,CACZT,UAAWY,KAAKC,MAAMP,aAAaI,QAAQ,iDAwF7C,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,8BACoBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,kBADpB,qMAMAH,EAAAC,EAAAC,cAAA,UACEC,UAAU,uBACVqF,SAAU3F,KAAKd,MAAMmF,SACrB7E,QAASQ,KAAKgF,WAHhB,2BAOA7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWL,KAAKd,MAAMG,YAExBc,EAAAC,EAAAC,cAAA,QAAM+E,SAAUpF,KAAKoF,UACnBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,6BACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAM+E,KAClBO,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCAAuC,IACpDH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMgF,KAClBM,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,SACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMiF,OAClBK,SAAUxE,KAAKwE,SACfsB,YAAY,SACZE,KAAK,SAIT7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLhB,MAAM,oBACNtE,UAAU,yCAGdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACVd,QAASQ,KAAKuE,eAFhB,wBAODvE,KAAKd,MAAMoF,SAAWnE,EAAAC,EAAAC,cAAC4F,EAAD,MAAa,cA5KRxF,aCAjB2F,6MACnBlH,MAAQ,CACN+E,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRkC,UAAW,GACXjC,WAAY,EACZkC,cAAe,EACfjC,UAAU,EACV/E,SAAU,EACVgF,UAAU,KASZC,cAAgB,SAAA9E,GACdA,EAAEC,iBAEFG,EAAKC,SACH,CACEwE,UAAU,GAEZ,kBACEzE,EAAKC,SAAS,CACZwE,UAAU,SAKlBE,SAAW,SAAA/E,GACTI,EAAKC,SAALc,OAAA6D,EAAA,EAAA7D,CAAA,GAAiBnB,EAAEiF,OAAOC,KAAOlF,EAAEiF,OAAOE,QAD5B,IAAAC,EAGShF,EAAKX,MAApB+E,EAHMY,EAGNZ,KAAMC,EAHAW,EAGAX,KACVY,EAAeG,KAAKC,MAAMH,WAAWd,GAAQc,WAAWb,IACxDqC,EAAkBxB,WAAWd,GAAQc,WAAWb,GACpDrE,EAAKC,SAAS,CACZsE,WAAYU,EACZwB,cAAeC,OAInBvB,UAAY,SAAAvF,GACVA,EAAEC,iBAEFG,EAAKC,SAAS,CACZmE,KAAMgB,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBjB,KAAMe,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBd,UAAU,OAIde,SAAW,SAAA3F,GACTA,EAAEC,iBADY,IAAA2F,EAUVxF,EAAKX,MANP+E,EAJYoB,EAIZpB,KACAC,EALYmB,EAKZnB,KACAC,EANYkB,EAMZlB,OACAkC,EAPYhB,EAOZgB,UACAjC,EARYiB,EAQZjB,WACAkC,EATYjB,EASZiB,cAGExB,EAAeG,KAAKC,MAAMH,WAAWd,GAAQc,WAAWb,IACxDqC,EAAkBxB,WAAWd,GAAQc,WAAWb,GAMpD,GALArE,EAAKC,SAAS,CACZsE,WAAYU,EACZwB,cAAeC,IAIfxB,WAAWZ,KAAYC,GACvBW,WAAWsB,KAAeC,EAC1B,CACAhB,MAAM,YACN,IAAIC,EAAY1F,EAAKX,MAAMI,SAAW,EACtCO,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRkC,UAAW,GACXjC,WAAY,EACZkC,cAAe,IAGjB3G,aAAa6F,QAAQ,WAAYD,QAG/BE,OAAOC,QACL,4FAGFH,EAAY1F,EAAKX,MAAMI,SAAW,EAClCO,EAAKC,SAAS,CAAEuE,UAAU,IAC1B1E,aAAa6F,QAAQ,WAAYD,KAEjC1F,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRkC,UAAW,GACXjC,WAAY,EACZkC,cAAe,IAEjBf,EAAY1F,EAAKX,MAAMI,SAAW,EAElCK,aAAa6F,QAAQ,WAAYD,IAGrC1F,EAAKC,SAAS,CACZR,SAAUW,KAAKC,MAAMP,aAAaI,QAAQ,mGAtG5CC,KAAKF,SAAS,CACZR,SAAUW,KAAKC,MAAMP,aAAaI,QAAQ,gDA0G5C,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,8BACoBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YADpB,qMAMAH,EAAAC,EAAAC,cAAA,UACEC,UAAU,uBACVqF,SAAU3F,KAAKd,MAAMmF,SACrB7E,QAASQ,KAAKgF,WAHhB,2BAOA7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWL,KAAKd,MAAMI,WAExBa,EAAAC,EAAAC,cAAA,QAAM+E,SAAUpF,KAAKoF,UACnBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,oBACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAM+E,KAClBO,SAAUxE,KAAKwE,SACfsB,YAAY,IACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAAiC,IAC9CH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,eACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMgF,KAClBM,SAAUxE,KAAKwE,SACfsB,YAAY,IACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,eACVqE,KAAK,SACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMiF,OAClBK,SAAUxE,KAAKwE,SACfsB,YAAY,WACZE,KAAK,QAEP7F,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,eACVqE,KAAK,YACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMmH,UAClB7B,SAAUxE,KAAKwE,SACfsB,YAAY,YACZE,KAAK,SAIT7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLhB,MAAM,oBACNtE,UAAU,yCAGdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACVd,QAASQ,KAAKuE,eAFhB,wBAODvE,KAAKd,MAAMoF,SAAWnE,EAAAC,EAAAC,cAAC4F,EAAD,MAAa,cA1MRxF,aCAlC+F,EAAOrG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BACpBmG,EAAQtG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BACrBoG,EAAOvG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCACpBqG,EAAMxG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACnBsG,EAAWzG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCACPuG,6MACnB3H,MAAQ,CACN+E,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZkC,cAAe,EACfjC,UAAU,EACV9E,UAAW,EACX+E,UAAU,EACVwC,aAAcF,EACdG,WAAY,GACZC,YAAa,eASfzC,cAAgB,SAAA9E,GACdA,EAAEC,iBACFG,EAAKC,SACH,CACEwE,UAAU,GAEZ,kBACEzE,EAAKC,SAAS,CACZwE,UAAU,SAKlBE,SAAW,SAAA/E,GACTI,EAAKC,SAALc,OAAA6D,EAAA,EAAA7D,CAAA,GAAiBnB,EAAEiF,OAAOC,KAAOlF,EAAEiF,OAAOE,QAD5B,IAAAC,EAGShF,EAAKX,MAApB+E,EAHMY,EAGNZ,KAAMC,EAHAW,EAGAX,KACVY,EAAe,EACnB,OAAQjF,EAAKX,MAAM4H,cACjB,KAAKN,EACH1B,EAAeC,WAAWd,GAAQc,WAAWb,GAC7C,MACF,KAAKuC,EACH3B,EAAeC,WAAWd,GAAQc,WAAWb,GAC7C,MACF,KAAKwC,EACH5B,EAAeC,WAAWd,GAAQc,WAAWb,GAC7C,MACF,KAAKyC,EACH7B,EAAeG,KAAKC,MAAMH,WAAWd,GAAQc,WAAWb,IACxD,IAAIqC,EAAkBxB,WAAWd,GAAQc,WAAWb,GAEpD,MACF,QACE,OAEJrE,EAAKC,SAAS,CACZsE,WAAYU,EACZwB,cAAeC,OAInBvB,UAAY,SAAAvF,GAWV,OAVAA,EAAEC,iBAEFG,EAAKC,SAAS,CACZmE,KAAMgB,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBjB,KAAMe,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBd,UAAU,IAGGY,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,IAG5C,KAAK,EACHtF,EAAKC,SAAS,CACZgH,aAAcN,IAEhB,MACF,KAAK,EACH3G,EAAKC,SAAS,CACZgH,aAAcL,IAEhB,MACF,KAAK,EACH5G,EAAKC,SAAS,CACZgH,aAAcJ,IAEhB,MACF,KAAK,EACH7G,EAAKC,SAAS,CACZgH,aAAcH,IAEhB,MACF,QACE9G,EAAKC,SAAS,CACZgH,aAAcF,QAKtBxB,SAAW,SAAA3F,GACTA,EAAEC,iBADY,IAAA2F,EAG6BxF,EAAKX,MAAxC+E,EAHMoB,EAGNpB,KAAMC,EAHAmB,EAGAnB,KAAMC,EAHNkB,EAGMlB,OAAQC,EAHdiB,EAGcjB,WAExBU,EAAeC,WAAWd,GAAQc,WAAWb,GAMjD,GAJArE,EAAKC,SAAS,CACZsE,WAAYU,IAGVC,WAAWZ,KAAYC,EAAY,CACrCkB,MAAM,YACN,IAAIC,EAAY1F,EAAKX,MAAMK,UAAY,EACvCM,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZ7E,UAAWgG,IAGb5F,aAAa6F,QAAQ,YAAaD,QAGhCE,OAAOC,QACL,4FAGFH,EAAY1F,EAAKX,MAAMK,UAAY,EACnCM,EAAKC,SAAS,CAAEuE,UAAU,EAAM9E,UAAWgG,IAC3C5F,aAAa6F,QAAQ,YAAaD,KAElCA,EAAY1F,EAAKX,MAAMK,UAAY,EACnCM,EAAKC,SAAS,CACZuE,UAAU,EACVJ,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,EACZ7E,UAAWgG,IAGb5F,aAAa6F,QAAQ,YAAaD,wFAlItCvF,KAAKF,SAAS,CACZP,UAAWU,KAAKC,MAAMP,aAAaI,QAAQ,iDAuI7C,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,8BACoBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,UADpB,qMAMAH,EAAAC,EAAAC,cAAA,UACEC,UAAU,uBACVqF,SAAU3F,KAAKd,MAAMmF,SACrB7E,QAASQ,KAAKgF,WAHhB,2BAOA7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWL,KAAKd,MAAMK,YAEvBS,KAAKd,MAAM4H,eAAiBH,EAC3BxG,EAAAC,EAAAC,cAAA,QAAM+E,SAAUpF,KAAKoF,UACnBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,6BACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAM+E,KAClBO,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAET/F,KAAKd,MAAM4H,aAAc,IAC1B3G,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMgF,KAClBM,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,wBACVqE,KAAK,SACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMiF,OAClBK,SAAUxE,KAAKwE,SACfsB,YAAa9F,KAAKd,MAAM8H,YACxBhB,KAAK,SAIT7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLhB,MAAM,oBACNtE,UAAU,yCAGdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBd,QAASQ,KAAKuE,eAAjD,wBAIDvE,KAAKd,MAAMoF,SAAWnE,EAAAC,EAAAC,cAAC4F,EAAD,MAAa,MAGtC9F,EAAAC,EAAAC,cAAA,QAAM+E,SAAUpF,KAAKoF,UACnBjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,oBACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAM+E,KAClBO,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAET/F,KAAKd,MAAM4H,aAAc,IAC1B3G,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,eACVqE,KAAK,OACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMgF,KAClBM,SAAUxE,KAAKwE,SACfsB,YAAY,oBACZH,SAAU3F,KAAKd,MAAMmF,SACrB0B,QAAQ,UAEV5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,eACVqE,KAAK,SACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMiF,OAClBK,SAAUxE,KAAKwE,SACfsB,YAAY,WACZE,KAAK,QAEP7F,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLtF,UAAU,eACVqE,KAAK,YACLkB,UAAQ,EACRjB,MAAO5E,KAAKd,MAAMmH,UAClB7B,SAAUxE,KAAKwE,SACfsB,YAAY,YACZE,KAAK,SAIT7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,SACEuF,KAAK,SACLhB,MAAM,oBACNtE,UAAU,yCAGdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBd,QAASQ,KAAKuE,eAAjD,wBAIDvE,KAAKd,MAAMoF,SAAWnE,EAAAC,EAAAC,cAAC4F,EAAD,MAAa,cA5RZxF,qBCuDrBwG,0LAxDX,OACE9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,IAAI7G,UAAU,gBACrBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBADf,aAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kCACV8G,cAAY,WACZxB,KAAK,UAHP,wBAOAzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,OAAO7G,UAAU,cACxBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,cAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,OAAO7G,UAAU,cACxBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBADf,cAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,QAAQ7G,UAAU,cACzBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBADf,oBAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,OAAO7G,UAAU,cACxBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBADf,cAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,QAAQ7G,UAAU,cACzBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBADf,wBA7CGG,cC4BN4G,0LAlBX,OACElH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACEnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkH,EAAD,MACApH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,KACErH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3I,IACjCkB,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOC,UAAW5D,IACpC7D,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOC,UAAW1B,IACpC/F,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWzB,IACrChG,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOC,UAAWxB,IACpCjG,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWf,cAZ/BpG,cCDEoH,QACW,cAA7BpC,OAAOqC,SAASC,UAEe,UAA7BtC,OAAOqC,SAASC,UAEhBtC,OAAOqC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/H,EAAAC,EAAAC,cAAC8H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6ba7b6fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Table.css\";\r\n\r\nexport default class Dashboard extends Component {\r\n  state = {\r\n    addScore: \"\",\r\n    subScore: \"\",\r\n    multScore: \"\",\r\n    divScore: \"\",\r\n    randScore: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    if (localStorage.getItem(\"addScore\") === null) {\r\n      this.setState({\r\n        addScore: \"0\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        addScore: JSON.parse(localStorage.getItem(\"addScore\"))\r\n      })\r\n    }\r\n\r\n    if (localStorage.getItem(\"subScore\") === null) {\r\n      this.setState({\r\n        subScore: \"0\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        subScore: JSON.parse(localStorage.getItem(\"subScore\"))\r\n      })\r\n    }\r\n\r\n    if (localStorage.getItem(\"multScore\") === null) {\r\n      this.setState({\r\n        multScore: \"0\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        multScore: JSON.parse(localStorage.getItem(\"multScore\"))\r\n      })\r\n    }\r\n    if (localStorage.getItem(\"divScore\") === null) {\r\n      this.setState({\r\n        divScore: \"0\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        divScore: JSON.parse(localStorage.getItem(\"divScore\"))\r\n      })\r\n    }\r\n\r\n    if (localStorage.getItem(\"randScore\") === null) {\r\n      this.setState({\r\n        randScore: \"0\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        randScore: JSON.parse(localStorage.getItem(\"randScore\"))\r\n      })\r\n    }\r\n \r\n  }\r\n\r\n  onClick = e => {\r\n    e.preventDefault();\r\n\r\n    localStorage.clear();\r\n    this.setState({\r\n      addScore: \"0\",\r\n      subScore: \"0\",\r\n      multScore: \"0\",\r\n      divScore: \"0\",\r\n      randScore: \"0\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h5>\r\n          Welcome to my Math App. This is just a fun project that I started to\r\n          learn React.\r\n        </h5>\r\n        <p>\r\n          You are currently in your dashboard. To start, go select an operator\r\n          and play the game.\r\n        </p>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center table-success\" colSpan=\"5\">\r\n                Scores\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\" className=\"text-center table-secondary\">\r\n                Addition\r\n              </th>\r\n              <th scope=\"col\" className=\"text-center table-secondary\">\r\n                Subtraction\r\n              </th>\r\n              <th scope=\"col\" className=\"text-center table-secondary\">\r\n                Multiplication\r\n              </th>\r\n              <th scope=\"col\" className=\"text-center table-secondary\">\r\n                Division\r\n              </th>\r\n              <th scope=\"col\" className=\"text-center table-secondary\">\r\n                Random\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-center table-info\">{this.state.addScore}</td>\r\n              <td className=\"text-center table-info\">{this.state.subScore}</td>\r\n              <td className=\"text-center table-info\">{this.state.multScore}</td>\r\n              <td className=\"text-center table-info\">{this.state.divScore}</td>\r\n              <td className=\"text-center table-info\">{this.state.randScore}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button className=\"btn btn-primary\" onClick={this.onClick}>\r\n          Reset your scores\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { v4 } from \"uuid\";\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n    this.endPaintEvent = this.endPaintEvent.bind(this);\r\n  }\r\n\r\n  isPainting = false;\r\n  // Different stroke styles to be used for user and guest\r\n  userStrokeStyle = \"#FFFFFF\";\r\n  guestStrokeStyle = \"#F0C987\";\r\n  line = [];\r\n  // v4 creates a unique id for each user. We used this since there's no auth to tell users apart\r\n  userId = v4();\r\n  prevPos = { offsetX: 0, offsetY: 0 };\r\n\r\n  onMouseDown({ nativeEvent }) {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    this.isPainting = true;\r\n    this.prevPos = { offsetX, offsetY };\r\n  }\r\n\r\n  onMouseMove({ nativeEvent }) {\r\n    if (this.isPainting) {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      const offSetData = { offsetX, offsetY };\r\n      // Set the start and stop position of the paint event.\r\n      const positionData = {\r\n        start: { ...this.prevPos },\r\n        stop: { ...offSetData }\r\n      };\r\n      // Add the position to the line array\r\n      this.line = this.line.concat(positionData);\r\n      this.paint(this.prevPos, offSetData, this.userStrokeStyle);\r\n    }\r\n  }\r\n  endPaintEvent() {\r\n    if (this.isPainting) {\r\n      this.isPainting = false;\r\n      this.sendPaintData();\r\n    }\r\n  }\r\n  paint(prevPos, currPos, strokeStyle) {\r\n    const { offsetX, offsetY } = currPos;\r\n    const { offsetX: x, offsetY: y } = prevPos;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = strokeStyle;\r\n    // Move the the prevPosition of the mouse\r\n    this.ctx.moveTo(x, y);\r\n    // Draw a line to the current position of the mouse\r\n    this.ctx.lineTo(offsetX, offsetY);\r\n    // Visualize the line using the strokeStyle\r\n    this.ctx.stroke();\r\n    this.prevPos = { offsetX, offsetY };\r\n  }\r\n\r\n  async sendPaintData() {\r\n    // const body = {\r\n    //   line: this.line,\r\n    //   userId: this.userId\r\n    // };\r\n    // We use the native fetch API to make requests to the server\r\n    // const req = await fetch(\"http://localhost:4000/paint\", {\r\n    //   method: \"post\",\r\n    //   body: JSON.stringify(body),\r\n    //   headers: {\r\n    //     \"content-type\": \"application/json\"\r\n    //   }\r\n    // });\r\n    // const res = await req.json();\r\n    // this.line = [];\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Here we set up the properties of the canvas element.\r\n    this.canvas.width = 500;\r\n    this.canvas.height = 500;\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.ctx.lineJoin = \"round\";\r\n    this.ctx.lineCap = \"round\";\r\n    this.ctx.lineWidth = 5;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        // We use the ref attribute to get direct access to the canvas element.\r\n        ref={ref => (this.canvas = ref)}\r\n        style={{ background: \"black\" }}\r\n        onMouseDown={this.onMouseDown}\r\n        onMouseLeave={this.endPaintEvent}\r\n        onMouseUp={this.endPaintEvent}\r\n        onMouseMove={this.onMouseMove}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Canvas;\r\n","import React, { Component } from \"react\";\r\nimport Canvas from \"../components/Canvas\";\r\n\r\nexport default class Addition extends Component {\r\n  state = {\r\n    num1: \"\",\r\n    num2: \"\",\r\n    result: \"\",\r\n    backresult: 0,\r\n    turnedOn: false,\r\n    addScore: 0,\r\n    isCanvas: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      addScore: JSON.parse(localStorage.getItem(\"addScore\"))\r\n    });\r\n  }\r\n\r\n  onCanvasErase = e => {\r\n    e.preventDefault();\r\n    this.setState(\r\n      {\r\n        isCanvas: false\r\n      },\r\n      () =>\r\n        this.setState({\r\n          isCanvas: true\r\n        })\r\n    );\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    const { num1, num2 } = this.state;\r\n    var numberResult = parseFloat(num1) + parseFloat(num2);\r\n    this.setState({\r\n      backresult: numberResult\r\n    });\r\n  };\r\n\r\n  randomNum = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      num1: Math.floor(Math.random() * 100),\r\n      num2: Math.floor(Math.random() * 100),\r\n      turnedOn: true\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { num1, num2, result, backresult } = this.state;\r\n\r\n    var numberResult = parseFloat(num1) + parseFloat(num2);\r\n\r\n    this.setState({\r\n      backresult: numberResult\r\n    });\r\n\r\n    if (parseFloat(result) === backresult) {\r\n      alert(\"Good Job\");\r\n      var increment = this.state.addScore + 1;\r\n      this.setState({\r\n        turnedOn: false,\r\n        num1: \"\",\r\n        num2: \"\",\r\n        result: \"\",\r\n        backresult: 0,\r\n        addScore: increment\r\n      });\r\n\r\n      localStorage.setItem(\"addScore\", increment);\r\n    } else {\r\n      if (\r\n        window.confirm(\r\n          \"You are incorrect, try again. Press OK to try again, cancel to go on and get -1 points.\"\r\n        )\r\n      ) {\r\n        increment = this.state.addScore - 1;\r\n        this.setState({ turnedOn: true, addScore: increment });\r\n        localStorage.setItem(\"addScore\", increment);\r\n      } else {\r\n        increment = this.state.addScore - 1;\r\n        this.setState({\r\n          turnedOn: false,\r\n          num1: \"\",\r\n          num2: \"\",\r\n          result: \"\",\r\n          backresult: 0,\r\n          addScore: increment\r\n        });\r\n\r\n        localStorage.setItem(\"addScore\", increment);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p>\r\n          You have selected <span className=\"text-danger\">addition</span>. Click\r\n          the button to get a random set of numbers or put your own in. If you\r\n          are logged in, your score will be kept. Every right answer will get\r\n          you a point, every wrong will net you -1 points.\r\n        </p>\r\n        <button\r\n          className=\"btn btn-success mb-3\"\r\n          disabled={this.state.turnedOn}\r\n          onClick={this.randomNum}\r\n        >\r\n          Get Your Random Numbers\r\n        </button>\r\n        <div>\r\n          <p>Score: {this.state.addScore}</p>\r\n        </div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"input-group d-inline-flex text-center w-50\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6 ml-4\"\r\n              name=\"num1\"\r\n              required\r\n              value={this.state.num1}\r\n              onChange={this.onChange}\r\n              placeholder=\"Enter a number...\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-plus mt-2 col-sm-1\" />{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6\"\r\n              name=\"num2\"\r\n              required\r\n              value={this.state.num2}\r\n              onChange={this.onChange}\r\n              placeholder=\"Enter a number...\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-equals mt-2 col-sm-1\" />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6\"\r\n              name=\"result\"\r\n              required\r\n              value={this.state.result}\r\n              onChange={this.onChange}\r\n              placeholder=\"Answer\"\r\n              step=\"any\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-center mt-3\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Check your answer\"\r\n              className=\"btn btn-success btn-block w-25 mb-5\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-danger mb-1\"\r\n              onClick={this.onCanvasErase}\r\n            >\r\n              Clear the Sketchpad\r\n            </button>\r\n          </div>\r\n          {this.state.isCanvas ? <Canvas /> : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Canvas from \"../components/Canvas\";\r\n\r\nexport default class Subtract extends Component {\r\n  state = {\r\n    num1: \"\",\r\n    num2: \"\",\r\n    result: \"\",\r\n    backresult: 0,\r\n    turnedOn: false,\r\n    subScore: 0,\r\n    isCanvas: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      subScore: JSON.parse(localStorage.getItem(\"subScore\"))\r\n    });\r\n  }\r\n\r\n  onCanvasErase = e => {\r\n    e.preventDefault();\r\n    this.setState(\r\n      {\r\n        isCanvas: false\r\n      },\r\n      () =>\r\n        this.setState({\r\n          isCanvas: true\r\n        })\r\n    );\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    const { num1, num2 } = this.state;\r\n    var numberResult = parseFloat(num1) - parseFloat(num2);\r\n    this.setState({\r\n      backresult: numberResult\r\n    });\r\n  };\r\n\r\n  randomNum = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      num1: Math.floor(Math.random() * 100),\r\n      num2: Math.floor(Math.random() * 100),\r\n      turnedOn: true\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { num1, num2, result, backresult } = this.state;\r\n\r\n    var numberResult = parseFloat(num1) - parseFloat(num2);\r\n\r\n    this.setState({\r\n      backresult: numberResult\r\n    });\r\n\r\n    if (parseFloat(result) === backresult) {\r\n      alert(\"Good Job\");\r\n      var increment = this.state.subScore + 1;\r\n      this.setState({\r\n        turnedOn: false,\r\n        num1: \"\",\r\n        num2: \"\",\r\n        result: \"\",\r\n        backresult: 0\r\n      });\r\n\r\n      localStorage.setItem(\"subScore\", increment);\r\n    } else {\r\n      if (\r\n        window.confirm(\r\n          \"You are incorrect, try again. Press OK to try again, cancel to go on and get -1 points.\"\r\n        )\r\n      ) {\r\n        increment = this.state.subScore - 1;\r\n        this.setState({ turnedOn: true });\r\n        localStorage.setItem(\"subScore\", increment);\r\n      } else {\r\n        this.setState({\r\n          turnedOn: false,\r\n          num1: \"\",\r\n          num2: \"\",\r\n          result: \"\",\r\n          backresult: 0\r\n        });\r\n        increment = this.state.subScore - 1;\r\n\r\n        localStorage.setItem(\"subScore\", increment);\r\n      }\r\n    }\r\n    this.setState({\r\n      subScore: JSON.parse(localStorage.getItem(\"subScore\"))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p>\r\n          You have selected <span className=\"text-danger\">subtract</span>. Click\r\n          the button to get a random set of numbers or put your own in. If you\r\n          are logged in, your score will be kept. Every right answer will get\r\n          you a point, every wrong will net you -1 points.\r\n        </p>\r\n        <button\r\n          className=\"btn btn-success mb-3\"\r\n          disabled={this.state.turnedOn}\r\n          onClick={this.randomNum}\r\n        >\r\n          Get Your Random Numbers\r\n        </button>\r\n        <div>\r\n          <p>Score: {this.state.subScore}</p>\r\n        </div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"input-group d-inline-flex text-center w-50\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6 ml-4\"\r\n              name=\"num1\"\r\n              required\r\n              value={this.state.num1}\r\n              onChange={this.onChange}\r\n              placeholder=\"Enter a number...\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-minus mt-2 col-sm-1\" />{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6\"\r\n              name=\"num2\"\r\n              required\r\n              value={this.state.num2}\r\n              onChange={this.onChange}\r\n              placeholder=\"Enter a number...\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-equals mt-2 col-sm-1\" />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6\"\r\n              name=\"result\"\r\n              required\r\n              value={this.state.result}\r\n              onChange={this.onChange}\r\n              placeholder=\"Answer\"\r\n              step=\"any\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-center mt-3\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Check your answer\"\r\n              className=\"btn btn-success btn-block w-25 mb-5\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-danger mb-1\"\r\n              onClick={this.onCanvasErase}\r\n            >\r\n              Clear the Sketchpad\r\n            </button>\r\n          </div>\r\n          {this.state.isCanvas ? <Canvas /> : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Canvas from \"../components/Canvas\";\r\n\r\nexport default class Multiply extends Component {\r\n  state = {\r\n    num1: \"\",\r\n    num2: \"\",\r\n    result: \"\",\r\n    backresult: 0,\r\n    turnedOn: false,\r\n    multScore: 0,\r\n    isCanvas: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      multScore: JSON.parse(localStorage.getItem(\"multScore\"))\r\n    });\r\n  }\r\n\r\n  onCanvasErase = e => {\r\n    e.preventDefault();\r\n    this.setState(\r\n      {\r\n        isCanvas: false\r\n      },\r\n      () =>\r\n        this.setState({\r\n          isCanvas: true\r\n        })\r\n    );\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    const { num1, num2 } = this.state;\r\n    var numberResult = parseFloat(num1) * parseFloat(num2);\r\n    this.setState({\r\n      backresult: numberResult\r\n    });\r\n  };\r\n\r\n  randomNum = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      num1: Math.floor(Math.random() * 100),\r\n      num2: Math.floor(Math.random() * 100),\r\n      turnedOn: true\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { num1, num2, result, backresult } = this.state;\r\n\r\n    var numberResult = parseFloat(num1) * parseFloat(num2);\r\n\r\n    this.setState({\r\n      backresult: numberResult\r\n    });\r\n\r\n    if (parseFloat(result) === backresult) {\r\n      alert(\"Good Job\");\r\n      var increment = this.state.multScore + 1;\r\n      this.setState({\r\n        turnedOn: false,\r\n        num1: \"\",\r\n        num2: \"\",\r\n        result: \"\",\r\n        backresult: 0\r\n      });\r\n\r\n      localStorage.setItem(\"multScore\", increment);\r\n    } else {\r\n      if (\r\n        window.confirm(\r\n          \"You are incorrect, try again. Press OK to try again, cancel to go on and get -1 points.\"\r\n        )\r\n      ) {\r\n        increment = this.state.multScore - 1;\r\n        this.setState({ turnedOn: true });\r\n        localStorage.setItem(\"multScore\", increment);\r\n      } else {\r\n        this.setState({\r\n          turnedOn: false,\r\n          num1: \"\",\r\n          num2: \"\",\r\n          result: \"\",\r\n          backresult: 0\r\n        });\r\n        increment = this.state.multScore - 1;\r\n\r\n        localStorage.setItem(\"multScore\", increment);\r\n      }\r\n    }\r\n    this.setState({\r\n      multScore: JSON.parse(localStorage.getItem(\"multScore\"))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p>\r\n          You have selected <span className=\"text-danger\">multiplication</span>.\r\n          Click the button to get a random set of numbers or put your own in. If\r\n          you are logged in, your score will be kept. Every right answer will\r\n          get you a point, every wrong will net you -1 points.\r\n        </p>\r\n        <button\r\n          className=\"btn btn-success mb-3\"\r\n          disabled={this.state.turnedOn}\r\n          onClick={this.randomNum}\r\n        >\r\n          Get Your Random Numbers\r\n        </button>\r\n        <div>\r\n          <p>Score: {this.state.multScore}</p>\r\n        </div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"input-group d-inline-flex text-center w-50\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6 ml-4\"\r\n              name=\"num1\"\r\n              required\r\n              value={this.state.num1}\r\n              onChange={this.onChange}\r\n              placeholder=\"Enter a number...\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-star-of-life mt-2 col-sm-1\" />{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6\"\r\n              name=\"num2\"\r\n              required\r\n              value={this.state.num2}\r\n              onChange={this.onChange}\r\n              placeholder=\"Enter a number...\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-equals mt-2 col-sm-1\" />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control col-sm-6\"\r\n              name=\"result\"\r\n              required\r\n              value={this.state.result}\r\n              onChange={this.onChange}\r\n              placeholder=\"Answer\"\r\n              step=\"any\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-center mt-3\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Check your answer\"\r\n              className=\"btn btn-success btn-block w-25 mb-5\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-danger mb-1\"\r\n              onClick={this.onCanvasErase}\r\n            >\r\n              Clear the Sketchpad\r\n            </button>\r\n          </div>\r\n          {this.state.isCanvas ? <Canvas /> : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Canvas from \"../components/Canvas\";\r\n\r\nexport default class Division extends Component {\r\n  state = {\r\n    num1: \"\",\r\n    num2: \"\",\r\n    result: \"\",\r\n    remainder: \"\",\r\n    backresult: 0,\r\n    backremainder: 0,\r\n    turnedOn: false,\r\n    divScore: 0,\r\n    isCanvas: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      divScore: JSON.parse(localStorage.getItem(\"divScore\"))\r\n    });\r\n  }\r\n\r\n  onCanvasErase = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState(\r\n      {\r\n        isCanvas: false\r\n      },\r\n      () =>\r\n        this.setState({\r\n          isCanvas: true\r\n        })\r\n    );\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    const { num1, num2 } = this.state;\r\n    var numberResult = Math.floor(parseFloat(num1) / parseFloat(num2));\r\n    var numberRemainder = parseFloat(num1) % parseFloat(num2);\r\n    this.setState({\r\n      backresult: numberResult,\r\n      backremainder: numberRemainder\r\n    });\r\n  };\r\n\r\n  randomNum = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      num1: Math.floor(Math.random() * 100),\r\n      num2: Math.floor(Math.random() * 100),\r\n      turnedOn: true\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      num1,\r\n      num2,\r\n      result,\r\n      remainder,\r\n      backresult,\r\n      backremainder\r\n    } = this.state;\r\n\r\n    var numberResult = Math.floor(parseFloat(num1) / parseFloat(num2));\r\n    var numberRemainder = parseFloat(num1) % parseFloat(num2);\r\n    this.setState({\r\n      backresult: numberResult,\r\n      backremainder: numberRemainder\r\n    });\r\n\r\n    if (\r\n      parseFloat(result) === backresult &&\r\n      parseFloat(remainder) === backremainder\r\n    ) {\r\n      alert(\"Good Job\");\r\n      var increment = this.state.divScore + 1;\r\n      this.setState({\r\n        turnedOn: false,\r\n        num1: \"\",\r\n        num2: \"\",\r\n        result: \"\",\r\n        remainder: \"\",\r\n        backresult: 0,\r\n        backremainder: 0\r\n      });\r\n\r\n      localStorage.setItem(\"divScore\", increment);\r\n    } else {\r\n      if (\r\n        window.confirm(\r\n          \"You are incorrect, try again. Press OK to try again, cancel to go on and get -1 points.\"\r\n        )\r\n      ) {\r\n        increment = this.state.divScore - 1;\r\n        this.setState({ turnedOn: true });\r\n        localStorage.setItem(\"divScore\", increment);\r\n      } else {\r\n        this.setState({\r\n          turnedOn: false,\r\n          num1: \"\",\r\n          num2: \"\",\r\n          result: \"\",\r\n          remainder: \"\",\r\n          backresult: 0,\r\n          backremainder: 0\r\n        });\r\n        increment = this.state.divScore - 1;\r\n\r\n        localStorage.setItem(\"divScore\", increment);\r\n      }\r\n    }\r\n    this.setState({\r\n      divScore: JSON.parse(localStorage.getItem(\"divScore\"))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p>\r\n          You have selected <span className=\"text-danger\">division</span>. Click\r\n          the button to get a random set of numbers or put your own in. If you\r\n          are logged in, your score will be kept. Every right answer will get\r\n          you a point, every wrong will net you -1 points.\r\n        </p>\r\n        <button\r\n          className=\"btn btn-success mb-3\"\r\n          disabled={this.state.turnedOn}\r\n          onClick={this.randomNum}\r\n        >\r\n          Get Your Random Numbers\r\n        </button>\r\n        <div>\r\n          <p>Score: {this.state.divScore}</p>\r\n        </div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"input-group d-inline-flex text-center w-75\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control ml-4\"\r\n              name=\"num1\"\r\n              required\r\n              value={this.state.num1}\r\n              onChange={this.onChange}\r\n              placeholder=\"0\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-divide mt-2 col-sm-1\" />{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"num2\"\r\n              required\r\n              value={this.state.num2}\r\n              onChange={this.onChange}\r\n              placeholder=\"0\"\r\n              disabled={this.state.turnedOn}\r\n              pattern=\"[0-9]\"\r\n            />\r\n            <i className=\"fas fa-equals mt-2 col-sm-1\" />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"result\"\r\n              required\r\n              value={this.state.result}\r\n              onChange={this.onChange}\r\n              placeholder=\"Quotient\"\r\n              step=\"any\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"remainder\"\r\n              required\r\n              value={this.state.remainder}\r\n              onChange={this.onChange}\r\n              placeholder=\"Remainder\"\r\n              step=\"any\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-center mt-3\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Check your answer\"\r\n              className=\"btn btn-success btn-block w-25 mb-5\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-danger mb-1\"\r\n              onClick={this.onCanvasErase}\r\n            >\r\n              Clear the Sketchpad\r\n            </button>\r\n          </div>\r\n          {this.state.isCanvas ? <Canvas /> : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Canvas from \"../components/Canvas\";\r\n\r\nvar plus = <i className=\"fas fa-plus mt-2 col-sm-1\" />;\r\nvar minus = <i className=\"fas fa-minus mt-2 col-sm-1\" />;\r\nvar mult = <i className=\"fas fa-star-of-life mt-2 col-sm-1\" />;\r\nvar div = <i className=\"fas fa-divide mt-2 col-sm-1\" />;\r\nvar question = <i className=\"fas fa-question mt-2 col-sm-1\" />;\r\nexport default class Random extends Component {\r\n  state = {\r\n    num1: \"\",\r\n    num2: \"\",\r\n    result: \"\",\r\n    backresult: 0,\r\n    backremainder: 0,\r\n    turnedOn: false,\r\n    randScore: 0,\r\n    isCanvas: true,\r\n    randOperator: question,\r\n    isOperator: \"\",\r\n    placeHolder: \"Answer...\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      randScore: JSON.parse(localStorage.getItem(\"randScore\"))\r\n    });\r\n  }\r\n\r\n  onCanvasErase = e => {\r\n    e.preventDefault();\r\n    this.setState(\r\n      {\r\n        isCanvas: false\r\n      },\r\n      () =>\r\n        this.setState({\r\n          isCanvas: true\r\n        })\r\n    );\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    const { num1, num2 } = this.state;\r\n    var numberResult = 0;\r\n    switch (this.state.randOperator) {\r\n      case plus:\r\n        numberResult = parseFloat(num1) + parseFloat(num2);\r\n        break;\r\n      case minus:\r\n        numberResult = parseFloat(num1) - parseFloat(num2);\r\n        break;\r\n      case mult:\r\n        numberResult = parseFloat(num1) * parseFloat(num2);\r\n        break;\r\n      case div:\r\n        numberResult = Math.floor(parseFloat(num1) / parseFloat(num2));\r\n        var numberRemainder = parseFloat(num1) % parseFloat(num2);\r\n\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    this.setState({\r\n      backresult: numberResult,\r\n      backremainder: numberRemainder\r\n    });\r\n  };\r\n\r\n  randomNum = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      num1: Math.floor(Math.random() * 100),\r\n      num2: Math.floor(Math.random() * 100),\r\n      turnedOn: true\r\n    });\r\n\r\n    var operator = Math.floor(Math.random() * 4 + 1);\r\n\r\n    switch (operator) {\r\n      case 1:\r\n        this.setState({\r\n          randOperator: plus\r\n        });\r\n        break;\r\n      case 2:\r\n        this.setState({\r\n          randOperator: minus\r\n        });\r\n        break;\r\n      case 3:\r\n        this.setState({\r\n          randOperator: mult\r\n        });\r\n        break;\r\n      case 4:\r\n        this.setState({\r\n          randOperator: div\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          randOperator: question\r\n        });\r\n    }\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { num1, num2, result, backresult } = this.state;\r\n\r\n    var numberResult = parseFloat(num1) + parseFloat(num2);\r\n\r\n    this.setState({\r\n      backresult: numberResult\r\n    });\r\n\r\n    if (parseFloat(result) === backresult) {\r\n      alert(\"Good Job\");\r\n      var increment = this.state.randScore + 1;\r\n      this.setState({\r\n        turnedOn: false,\r\n        num1: \"\",\r\n        num2: \"\",\r\n        result: \"\",\r\n        backresult: 0,\r\n        randScore: increment\r\n      });\r\n\r\n      localStorage.setItem(\"randScore\", increment);\r\n    } else {\r\n      if (\r\n        window.confirm(\r\n          \"You are incorrect, try again. Press OK to try again, cancel to go on and get -1 points.\"\r\n        )\r\n      ) {\r\n        increment = this.state.randScore - 1;\r\n        this.setState({ turnedOn: true, randScore: increment });\r\n        localStorage.setItem(\"randScore\", increment);\r\n      } else {\r\n        increment = this.state.randScore - 1;\r\n        this.setState({\r\n          turnedOn: false,\r\n          num1: \"\",\r\n          num2: \"\",\r\n          result: \"\",\r\n          backresult: 0,\r\n          randScore: increment\r\n        });\r\n\r\n        localStorage.setItem(\"randScore\", increment);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p>\r\n          You have selected <span className=\"text-danger\">random</span>. Click\r\n          the button to get a random set of numbers or put your own in. If you\r\n          are logged in, your score will be kept. Every right answer will get\r\n          you a point, every wrong will net you -1 points.\r\n        </p>\r\n        <button\r\n          className=\"btn btn-success mb-3\"\r\n          disabled={this.state.turnedOn}\r\n          onClick={this.randomNum}\r\n        >\r\n          Get Your Random Numbers\r\n        </button>\r\n        <div>\r\n          <p>Score: {this.state.randScore}</p>\r\n        </div>\r\n        {this.state.randOperator !== div ? (\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"input-group d-inline-flex text-center w-50\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control col-sm-6 ml-4\"\r\n                name=\"num1\"\r\n                required\r\n                value={this.state.num1}\r\n                onChange={this.onChange}\r\n                placeholder=\"Enter a number...\"\r\n                disabled={this.state.turnedOn}\r\n                pattern=\"[0-9]\"\r\n              />\r\n              {this.state.randOperator}{\" \"}\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control col-sm-6\"\r\n                name=\"num2\"\r\n                required\r\n                value={this.state.num2}\r\n                onChange={this.onChange}\r\n                placeholder=\"Enter a number...\"\r\n                disabled={this.state.turnedOn}\r\n                pattern=\"[0-9]\"\r\n              />\r\n              <i className=\"fas fa-equals mt-2 col-sm-1\" />\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control col-sm-6\"\r\n                name=\"result\"\r\n                required\r\n                value={this.state.result}\r\n                onChange={this.onChange}\r\n                placeholder={this.state.placeHolder}\r\n                step=\"any\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-center mt-3\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Check your answer\"\r\n                className=\"btn btn-success btn-block w-25 mb-5\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <button className=\"btn btn-danger\" onClick={this.onCanvasErase}>\r\n                Clear the Sketchpad\r\n              </button>\r\n            </div>\r\n            {this.state.isCanvas ? <Canvas /> : null}\r\n          </form>\r\n        ) : (\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"input-group d-inline-flex text-center w-75\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control ml-4\"\r\n                name=\"num1\"\r\n                required\r\n                value={this.state.num1}\r\n                onChange={this.onChange}\r\n                placeholder=\"Enter a number...\"\r\n                disabled={this.state.turnedOn}\r\n                pattern=\"[0-9]\"\r\n              />\r\n              {this.state.randOperator}{\" \"}\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"num2\"\r\n                required\r\n                value={this.state.num2}\r\n                onChange={this.onChange}\r\n                placeholder=\"Enter a number...\"\r\n                disabled={this.state.turnedOn}\r\n                pattern=\"[0-9]\"\r\n              />\r\n              <i className=\"fas fa-equals mt-2 col-sm-1\" />\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"result\"\r\n                required\r\n                value={this.state.result}\r\n                onChange={this.onChange}\r\n                placeholder=\"Quotient\"\r\n                step=\"any\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"remainder\"\r\n                required\r\n                value={this.state.remainder}\r\n                onChange={this.onChange}\r\n                placeholder=\"Remainder\"\r\n                step=\"any\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-center mt-3\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Check your answer\"\r\n                className=\"btn btn-success btn-block w-25 mb-5\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <button className=\"btn btn-danger\" onClick={this.onCanvasErase}>\r\n                Clear the Sketchpad\r\n              </button>\r\n            </div>\r\n            {this.state.isCanvas ? <Canvas /> : null}\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-success mb-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            <i className=\"fas fa-laptop\" /> Math App\r\n          </Link>\r\n\r\n          <div className=\"dropdown ml-auto\">\r\n            <i className=\"fas fa-stream text-white\" />\r\n            <button\r\n              className=\"btn btn-success dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              type=\"button\"\r\n            >\r\n              Select your operator\r\n            </button>\r\n            <div className=\"dropdown-menu bg-success\">\r\n              <ul>\r\n                <Link to=\"/add\" className=\"navbar-nav\">\r\n                  <li className=\"nav-item text-white dropdown-item\">\r\n                    <i className=\"fas fa-plus\" /> Addition\r\n                  </li>\r\n                </Link>\r\n                <div className=\"dropdown-divider\" />\r\n                <Link to=\"/sub\" className=\"navbar-nav\">\r\n                  <li className=\"nav-item text-white dropdown-item\">\r\n                    <i className=\"fas fa-minus\" /> Subtract\r\n                  </li>\r\n                </Link>\r\n                <div className=\"dropdown-divider\" />\r\n                <Link to=\"/mult\" className=\"navbar-nav\">\r\n                  <li className=\"nav-item text-white  dropdown-item\">\r\n                    <i className=\"fas fa-star-of-life\" /> Multiplication\r\n                  </li>\r\n                </Link>\r\n                <div className=\"dropdown-divider\" />\r\n                <Link to=\"/div\" className=\"navbar-nav\">\r\n                  <li className=\"nav-item text-white dropdown-item\">\r\n                    <i className=\"fas fa-divide\" /> Division\r\n                  </li>\r\n                </Link>\r\n                <div className=\"dropdown-divider\" />\r\n                <Link to=\"/rand\" className=\"navbar-nav\">\r\n                  <li className=\"nav-item text-white dropdown-item\">\r\n                    <i className=\"fas fa-random\" /> Random\r\n                  </li>\r\n                </Link>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Addition from \"./layout/Addition\";\r\nimport Subtract from \"./layout/Subtract\";\r\nimport Multiply from \"./layout/Multiply\";\r\nimport Division from \"./layout/Division\";\r\nimport Random from \"./layout/Random\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route exact path=\"/add\" component={Addition} />\r\n            <Route exact path=\"/sub\" component={Subtract} />\r\n            <Route exact path=\"/mult\" component={Multiply} />\r\n            <Route exact path=\"/div\" component={Division} />\r\n            <Route exact path=\"/rand\" component={Random} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}